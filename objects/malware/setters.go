// Copyright 2015-2020 Bret Jordan, All rights reserved.
//
// Use of this source code is governed by an Apache 2.0 license that can be
// found in the LICENSE file in the root of the source tree.

package malware

import (
	"github.com/wxj95/libstix2/resources"
)

// ----------------------------------------------------------------------
// Public Methods
// ----------------------------------------------------------------------

/*
AddTypes - This method takes in a string value, a comma separated list of
string values, or a slice of string values that represents a malware type and
adds it to the malware types property. The values SHOULD come from the
malware-type-ov open vocabulary.
*/
func (o *Malware) AddTypes(values interface{}) error {
	return resources.AddValuesToList(&o.MalwareTypes, values)
}

/*
SetIsFamily - This method sets the is family property to true.
*/
func (o *Malware) SetIsFamily() error {
	o.IsFamily = true

	return nil
}

/*
AddOsExecutionEnvs - This method takes in a string value, a comma separated
list of string values, or a slice of string values that represents an os
execution environment and adds it to the os execution envs property.
*/
func (o *Malware) AddOsExecutionEnvs(values interface{}) error {
	return resources.AddValuesToList(&o.OsExecutionEnvs, values)
}

/*
AddArchitectureExecutionEnvs - This method takes in a string value, a comma
separated list of string values, or a slice of string values that represents an
architecture execution environment and adds it to the architecture execution
envs property. The values SHOULD come from the processor-architecture-ov open
vocabulary.
*/
func (o *Malware) AddArchitectureExecutionEnvs(values interface{}) error {
	return resources.AddValuesToList(&o.ArchitectureExecutionEnvs, values)
}

/*
AddImplementationLanguages - This method takes in a string value, a comma
separated list of string values, or a slice of string values that represents a
programming language that this malware was implemented in and adds it to the
implementation languages property. The values SHOULD come from the
implementation-language-ov open vocabulary.
*/
func (o *Malware) AddImplementationLanguages(values interface{}) error {
	return resources.AddValuesToList(&o.ImplementationLanguages, values)
}

/*
AddCapabilities - This method takes in a string value, a comma separated list
of string values, or a slice of string values that represents a capability of
this malware and adds it to the capabilities property. The values SHOULD come
from the malware-capabilities-ov open vocabulary.
*/
func (o *Malware) AddCapabilities(values interface{}) error {
	return resources.AddValuesToList(&o.Capabilities, values)
}

/*
AddSampleRefs - This method takes in a string value, a comma separated list
of string values, or a slice of string values that represents an id of a sco
file or artifact object associated with this malware and adds it to the sample
refs property.
*/
func (o *Malware) AddSampleRefs(values interface{}) error {
	return resources.AddValuesToList(&o.SampleRefs, values)
}
